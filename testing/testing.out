# ETHAN CHEN, BANSHAREE IREEN, JEFFREY JIANG
# testing.sh - integration testing for sudoku module

touch ../tables/easyTable.txt
touch ../tables/hardTable.txt
touch ../tables/valgrindTable.txt
touch ../tables/easy16.txt
touch ../tables/hard16.txt


# VALID TESTS
# test 1:creating a board on easy mode
../sudoku/sudoku create easy > ../tables/easyTable.txt

# test 2: creating a board on hard mode
../sudoku/sudoku create hard > ../tables/hardTable.txt

# test 3: solving the board made by test 1
../sudoku/sudoku solve easy < ../tables/easyTable.txt
Original Board: 
----------------------------------
|  6  0  3 |  0  0  5 |  2  0  7 | 
|  0  1  5 |  0  4  7 |  0  0  0 | 
|  0  0  7 |  3  8  0 |  0  1  0 | 
----------------------------------
|  0  0  0 |  0  6  0 |  4  7  2 | 
|  4  2  6 |  0  0  0 |  0  5  8 | 
|  0  0  8 |  4  2  0 |  0  3  1 | 
----------------------------------
|  5  0  4 |  7  9  1 |  0  0  0 | 
|  0  0  0 |  6  0  0 |  1  0  0 | 
|  0  0  9 |  0  0  0 |  7  0  4 | 
----------------------------------
Solved: 
----------------------------------
|  6  8  3 |  9  1  5 |  2  4  7 | 
|  9  1  5 |  2  4  7 |  3  8  6 | 
|  2  4  7 |  3  8  6 |  5  1  9 | 
----------------------------------
|  3  9  1 |  5  6  8 |  4  7  2 | 
|  4  2  6 |  1  7  3 |  9  5  8 | 
|  7  5  8 |  4  2  9 |  6  3  1 | 
----------------------------------
|  5  6  4 |  7  9  1 |  8  2  3 | 
|  8  7  2 |  6  3  4 |  1  9  5 | 
|  1  3  9 |  8  5  2 |  7  6  4 | 
----------------------------------

# test 4: solving the board made by test 2
../sudoku/sudoku solve hard < ../tables/easyTable.txt
Original Board: 
----------------------------------
|  6  0  3 |  0  0  5 |  2  0  7 | 
|  0  1  5 |  0  4  7 |  0  0  0 | 
|  0  0  7 |  3  8  0 |  0  1  0 | 
----------------------------------
|  0  0  0 |  0  6  0 |  4  7  2 | 
|  4  2  6 |  0  0  0 |  0  5  8 | 
|  0  0  8 |  4  2  0 |  0  3  1 | 
----------------------------------
|  5  0  4 |  7  9  1 |  0  0  0 | 
|  0  0  0 |  6  0  0 |  1  0  0 | 
|  0  0  9 |  0  0  0 |  7  0  4 | 
----------------------------------
Solved: 
----------------------------------
|  6  8  3 |  9  1  5 |  2  4  7 | 
|  9  1  5 |  2  4  7 |  3  8  6 | 
|  2  4  7 |  3  8  6 |  5  1  9 | 
----------------------------------
|  3  9  1 |  5  6  8 |  4  7  2 | 
|  4  2  6 |  1  7  3 |  9  5  8 | 
|  7  5  8 |  4  2  9 |  6  3  1 | 
----------------------------------
|  5  6  4 |  7  9  1 |  8  2  3 | 
|  8  7  2 |  6  3  4 |  1  9  5 | 
|  1  3  9 |  8  5  2 |  7  6  4 | 
----------------------------------

# test 5: creating 16x16 on easy board 
../sudoku/sudoku create easy 16 > ../tables/easy16.txt

# test 6: creating 16x16 board on hard mode
../sudoku/sudoku create hard 16 > ../tables/hard16.txt

# test 7: solving the board made by test 5
../sudoku/sudoku solve easy 16 < ../tables/easy16.txt
Original Board: 
---------------------------------------------------------
|  0  9  0  4 | 10  2  0 11 |  0  8  0  6 |  0  0 14  0 | 
|  3  0  0  2 |  0  5  9  0 | 16 13  0  0 | 12 11  0  0 | 
|  0  0 11 16 |  0  7  6 14 |  0  0 10  0 |  8  0  2  3 | 
|  0  0  6 14 |  0  0  3 16 | 12  9  2 11 |  1  0 10  5 | 
---------------------------------------------------------
|  0  0  1  7 |  0 14  4  8 |  0  6  0 16 |  2  0  5 11 | 
|  0  0  0  0 |  7  0  1 10 |  2  3 11  0 | 13  0  0  9 | 
|  0 16  9 11 |  0  0  5  2 | 15  0  0  0 | 10  4  8  0 | 
|  0  6  0  5 |  0  0 16  0 |  0 14  0  0 |  0  1  7 12 | 
---------------------------------------------------------
| 15  0  0  0 |  6 12  0  0 |  8  5 13  9 |  0  2  0  0 | 
|  0  3 12 13 |  0  0  0  0 |  6 11 16  0 |  0  5  9  8 | 
| 14  0  0  0 |  5  0 11  3 |  7 10  1 12 |  0 13 15  0 | 
| 11  5 16  0 |  0  0  8  9 |  0  4 15  0 |  7 10 12  1 | 
---------------------------------------------------------
|  9  0 13 15 |  0  3  7  6 |  4 12  0  0 |  0  0  0  0 | 
|  8  7  0  1 | 14 10  2 12 |  0 16  3 13 |  4  0 11 15 | 
| 16 11  0  0 |  8  0 15  1 |  5  0  0 10 |  9 12 13  0 | 
|  6  4  2  0 | 16  9  0  0 | 11  7  0 15 |  3  8  1  0 | 
---------------------------------------------------------
Solved: 
---------------------------------------------------------
|  1  9 15  4 | 10  2 12 11 |  3  8  5  6 | 16  7 14 13 | 
|  3  8 10  2 |  1  5  9 15 | 16 13  7 14 | 12 11  4  6 | 
|  5 12 11 16 | 13  7  6 14 |  1 15 10  4 |  8  9  2  3 | 
|  7 13  6 14 |  4  8  3 16 | 12  9  2 11 |  1 15 10  5 | 
---------------------------------------------------------
| 10 15  1  7 | 12 14  4  8 | 13  6  9 16 |  2  3  5 11 | 
| 12 14  4  8 |  7 15  1 10 |  2  3 11  5 | 13 16  6  9 | 
| 13 16  9 11 |  3  6  5  2 | 15  1 12  7 | 10  4  8 14 | 
|  2  6  3  5 |  9 11 16 13 | 10 14  4  8 | 15  1  7 12 | 
---------------------------------------------------------
| 15  1  7 10 |  6 12 14  4 |  8  5 13  9 | 11  2  3 16 | 
|  4  3 12 13 | 15  1 10  7 |  6 11 16  2 | 14  5  9  8 | 
| 14  2  8  9 |  5 16 11  3 |  7 10  1 12 |  6 13 15  4 | 
| 11  5 16  6 |  2 13  8  9 | 14  4 15  3 |  7 10 12  1 | 
---------------------------------------------------------
|  9 10 13 15 | 11  3  7  6 |  4 12  8  1 |  5 14 16  2 | 
|  8  7  5  1 | 14 10  2 12 |  9 16  3 13 |  4  6 11 15 | 
| 16 11 14  3 |  8  4 15  1 |  5  2  6 10 |  9 12 13  7 | 
|  6  4  2 12 | 16  9 13  5 | 11  7 14 15 |  3  8  1 10 | 
---------------------------------------------------------

# test 8: solving the board made by test 6
../sudoku/sudoku solve hard 16 < ../tables/hard16.txt
Original Board: 
---------------------------------------------------------
|  0  4  0  3 |  5 11  0  0 |  7  8  0 16 |  0  0  0  0 | 
|  5  0  0  6 |  0  4  2  0 | 14 13  0  0 |  7  8  0  0 | 
|  0  0  9  0 |  0 13 15 10 |  0  0  0  0 |  5  0  6 11 | 
| 14  0  0 10 |  0  0 16  9 |  0 12  6 11 |  0  0  2  3 | 
---------------------------------------------------------
|  0  0  1  4 |  0  5  6  7 |  0 14  8 15 |  9  0 10 13 | 
|  0  0  0  0 |  2  0  1  4 |  9 16 10  0 |  8  0  0  0 | 
|  0 14  8 15 |  0  0 10 13 |  2  0  0  4 |  6  5 11  0 | 
|  0 16  0 13 |  0  0 14  0 |  0  5  0  0 |  0  3  1  0 | 
---------------------------------------------------------
|  3  0  0  0 | 12  6  0  0 | 10 11  7 14 |  0  9  0  0 | 
|  0  6  5 12 |  0  0  0  0 | 16  0 13  0 |  0  7 14  1 | 
| 10  0  0  0 | 13  0  9 16 |  3  2  4  1 |  0  6  0  0 | 
|  0 15 13  0 |  0  0  7 14 |  0  6  5  0 |  4 11  3  0 | 
---------------------------------------------------------
|  4  0  3  2 |  0  7  8  5 |  0 10  0  0 |  0  0  0  0 | 
|  6 12  0  5 |  4 14 13  1 |  0  9  3  2 |  0  0  0 15 | 
| 13  0  0  0 | 16  0 11  2 | 15  0  0  5 |  3  1  4  0 | 
| 15 10 16  0 |  6  9  0  0 |  4  0  0  0 | 13  2  7  0 | 
---------------------------------------------------------
Solved: 
---------------------------------------------------------
|  1  4  2  3 |  5 11 12  6 |  7  8  9 16 | 14 13 15 10 | 
|  5 11 12  6 |  1  4  2  3 | 14 13 15 10 |  7  8 16  9 | 
|  7  8  9 16 | 14 13 15 10 |  1  4  2  3 |  5 12  6 11 | 
| 14 13 15 10 |  7  8 16  9 |  5 12  6 11 |  1  4  2  3 | 
---------------------------------------------------------
|  2  3  1  4 | 11  5  6  7 | 12 14  8 15 |  9 16 10 13 | 
| 11  5  6  7 |  2  3  1  4 |  9 16 10 13 |  8 15 12 14 | 
| 12 14  8 15 |  9 16 10 13 |  2  3  1  4 |  6  5 11  7 | 
|  9 16 10 13 |  8 12 14 15 |  6  5 11  7 |  2  3  1  4 | 
---------------------------------------------------------
|  3  2  4  1 | 12  6  5  8 | 10 11  7 14 | 15  9 13 16 | 
|  8  6  5 12 |  3  2  4 11 | 16 15 13  9 | 10  7 14  1 | 
| 10  7 11 14 | 13 15  9 16 |  3  2  4  1 | 12  6  5  8 | 
| 16 15 13  9 | 10  1  7 14 |  8  6  5 12 |  4 11  3  2 | 
---------------------------------------------------------
|  4  1  3  2 | 15  7  8  5 | 13 10 16  6 | 11 14  9 12 | 
|  6 12  7  5 |  4 14 13  1 | 11  9  3  2 | 16 10  8 15 | 
| 13  9 14  8 | 16 10 11  2 | 15  7 12  5 |  3  1  4  6 | 
| 15 10 16 11 |  6  9  3 12 |  4  1 14  8 | 13  2  7  5 | 
---------------------------------------------------------


# INVALID INPUTS

# invalid mode
../sudoku/sudoku wrong easy
Please select a valid mode: create or solve.

# invalid difficulty
../sudoku/sudoku create wrong
Please select a valid level of difficulty: easy or hard.

# 3rd argument can only be dimension
../sudoku/sudoku create easy nonIntArg
Dimension must be a 4, 9, or 16.

# using invalid dimension
../sudoku/sudoku solve hard 10 
Dimension must be a 4, 9, or 16.

# using invalid board
../sudoku/sudoku solve easy < ../tables/invalidTable.txt
Error: format of input file is incorrect

# SOLVABILITY
# trying to solve a known unsolvable board
../sudoku/sudoku solve easy < ../tables/unsolvableTable.txt
5 already exists in row
5 already exists in col
5 already exists in box
Invalid board
Could not solve board
Original Board: 
5 1 6 8 4 5 7 3 2 
3 0 7 6 0 5 0 0 0 
8 0 9 7 0 0 0 6 5 
1 3 5 0 6 0 9 0 7 
4 7 2 5 9 1 0 0 6 
9 6 8 3 7 0 0 5 0 
2 5 3 1 8 6 0 7 4 
6 8 4 2 0 7 5 0 0 
7 9 1 0 5 0 6 0 8 

# VALGRIND TESTS
# checking for memory leaks on create mode
valgrind --leak-check=full --show-leak-kinds=all ../sudoku/sudoku create easy > ../tables/valgrindTable.txt
==28357== Memcheck, a memory error detector
==28357== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==28357== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==28357== Command: ../sudoku/sudoku create easy
==28357== 
==28357== 
==28357== HEAP SUMMARY:
==28357==     in use at exit: 510 bytes in 33 blocks
==28357==   total heap usage: 4,185 allocs, 4,152 frees, 96,882 bytes allocated
==28357== 
==28357== 72 bytes in 3 blocks are indirectly lost in loss record 1 of 7
==28357==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==28357==    by 0x10AD63: generate (creator.c:105)
==28357==    by 0x10AA1D: createUniqueTable (creator.c:30)
==28357==    by 0x109064: createTable (sudoku.c:121)
==28357==    by 0x108FF0: main (sudoku.c:96)
==28357== 
==28357== 90 bytes in 9 blocks are indirectly lost in loss record 2 of 7
==28357==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==28357==    by 0x10AC8D: generate (creator.c:94)
==28357==    by 0x10AA1D: createUniqueTable (creator.c:30)
==28357==    by 0x109064: createTable (sudoku.c:121)
==28357==    by 0x108FF0: main (sudoku.c:96)
==28357== 
==28357== 90 bytes in 9 blocks are indirectly lost in loss record 3 of 7
==28357==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==28357==    by 0x10ACFB: generate (creator.c:100)
==28357==    by 0x10AA1D: createUniqueTable (creator.c:30)
==28357==    by 0x109064: createTable (sudoku.c:121)
==28357==    by 0x108FF0: main (sudoku.c:96)
==28357== 
==28357== 90 bytes in 9 blocks are indirectly lost in loss record 4 of 7
==28357==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==28357==    by 0x10ADB6: generate (creator.c:107)
==28357==    by 0x10AA1D: createUniqueTable (creator.c:30)
==28357==    by 0x109064: createTable (sudoku.c:121)
==28357==    by 0x108FF0: main (sudoku.c:96)
==28357== 
==28357== 162 (72 direct, 90 indirect) bytes in 1 blocks are definitely lost in loss record 5 of 7
==28357==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==28357==    by 0x10AC4C: generate (creator.c:92)
==28357==    by 0x10AA1D: createUniqueTable (creator.c:30)
==28357==    by 0x109064: createTable (sudoku.c:121)
==28357==    by 0x108FF0: main (sudoku.c:96)
==28357== 
==28357== 162 (72 direct, 90 indirect) bytes in 1 blocks are definitely lost in loss record 6 of 7
==28357==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==28357==    by 0x10ACBA: generate (creator.c:98)
==28357==    by 0x10AA1D: createUniqueTable (creator.c:30)
==28357==    by 0x109064: createTable (sudoku.c:121)
==28357==    by 0x108FF0: main (sudoku.c:96)
==28357== 
==28357== 186 (24 direct, 162 indirect) bytes in 1 blocks are definitely lost in loss record 7 of 7
==28357==    at 0x4C33B25: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==28357==    by 0x10AD25: generate (creator.c:103)
==28357==    by 0x10AA1D: createUniqueTable (creator.c:30)
==28357==    by 0x109064: createTable (sudoku.c:121)
==28357==    by 0x108FF0: main (sudoku.c:96)
==28357== 
==28357== LEAK SUMMARY:
==28357==    definitely lost: 168 bytes in 3 blocks
==28357==    indirectly lost: 342 bytes in 30 blocks
==28357==      possibly lost: 0 bytes in 0 blocks
==28357==    still reachable: 0 bytes in 0 blocks
==28357==         suppressed: 0 bytes in 0 blocks
==28357== 
==28357== For counts of detected and suppressed errors, rerun with: -v
==28357== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)

# checking for memory leaks on solve mode
valgrind --leak-check=full --show-leak-kinds=all ../sudoku/sudoku solve easy < ../tables/valgrindTable.txt
==28369== Memcheck, a memory error detector
==28369== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==28369== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==28369== Command: ../sudoku/sudoku solve easy
==28369== 
Original Board: 
----------------------------------
|  0  0  0 |  0  4  0 |  0  5  0 | 
|  4  0  7 |  0  5  0 |  0  1  2 | 
|  5  0  9 |  0  7  0 |  0  0  0 | 
----------------------------------
|  0  3  1 |  0  8  7 |  9  2  5 | 
|  7  0  2 |  1  9  3 |  8  6  0 | 
|  0  0  0 |  0  0  2 |  3  7  0 | 
----------------------------------
|  0  0  0 |  0  3  0 |  2  0  0 | 
|  2  0  3 |  0  0  6 |  5  8  7 | 
|  0  0  0 |  7  0  5 |  0  0  0 | 
----------------------------------
Solved: 
----------------------------------
|  3  1  6 |  2  4  8 |  7  5  9 | 
|  4  8  7 |  3  5  9 |  6  1  2 | 
|  5  2  9 |  6  7  1 |  4  3  8 | 
----------------------------------
|  6  3  1 |  4  8  7 |  9  2  5 | 
|  7  5  2 |  1  9  3 |  8  6  4 | 
|  8  9  4 |  5  6  2 |  3  7  1 | 
----------------------------------
|  1  7  5 |  8  3  4 |  2  9  6 | 
|  2  4  3 |  9  1  6 |  5  8  7 | 
|  9  6  8 |  7  2  5 |  1  4  3 | 
----------------------------------
==28369== 
==28369== HEAP SUMMARY:
==28369==     in use at exit: 0 bytes in 0 blocks
==28369==   total heap usage: 47 allocs, 47 frees, 17,338 bytes allocated
==28369== 
==28369== All heap blocks were freed -- no leaks are possible
==28369== 
==28369== For counts of detected and suppressed errors, rerun with: -v
==28369== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

# checking for memory leaks on necessary edge cases
valgrind --leak-check=full --show-leak-kinds=all ../sudoku/sudoku solve easy < ../tables/invalidTable.txt
==28379== Memcheck, a memory error detector
==28379== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==28379== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==28379== Command: ../sudoku/sudoku solve easy
==28379== 
Error: format of input file is incorrect
==28379== 
==28379== HEAP SUMMARY:
==28379==     in use at exit: 0 bytes in 0 blocks
==28379==   total heap usage: 12 allocs, 12 frees, 8,604 bytes allocated
==28379== 
==28379== All heap blocks were freed -- no leaks are possible
==28379== 
==28379== For counts of detected and suppressed errors, rerun with: -v
==28379== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

exit 0
