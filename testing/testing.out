# ETHAN CHEN, BANSHAREE IREEN, JEFFREY JIANG
# testing.sh - integration testing for sudoku module

touch ../tables/easyTable.txt
touch ../tables/hardTable.txt
touch ../tables/valgrindTable.txt
touch ../tables/easy16.txt
touch ../tables/hard16.txt


# VALID TESTS
# test 1:creating a board on easy mode
../sudoku/sudoku create easy > ../tables/easyTable.txt

# test 2: creating a board on hard mode
../sudoku/sudoku create hard > ../tables/hardTable.txt

# test 3: solving the board made by test 1
../sudoku/sudoku solve easy < ../tables/easyTable.txt
Original Board: 
----------------------------------
|  8  0  0 |  2  1  0 |  0  4  5 | 
|  0  1  0 |  0  0  0 |  7  6  0 | 
|  0  0  0 |  0  0  0 |  0  9  2 | 
----------------------------------
|  0  6  0 |  1  0  3 |  8  0  0 | 
|  1  0  8 |  5  0  4 |  0  3  0 | 
|  4  0  0 |  0  2  0 |  9  7  0 | 
----------------------------------
|  0  2  0 |  9  4  7 |  5  0  0 | 
|  5  3  0 |  6  0  0 |  4  2  0 | 
|  9  0  4 |  3  5  0 |  0  0  0 | 
----------------------------------
Solved: 
----------------------------------
|  8  7  6 |  2  1  9 |  3  4  5 | 
|  2  1  9 |  4  3  5 |  7  6  8 | 
|  3  4  5 |  7  6  8 |  1  9  2 | 
----------------------------------
|  7  6  2 |  1  9  3 |  8  5  4 | 
|  1  9  8 |  5  7  4 |  2  3  6 | 
|  4  5  3 |  8  2  6 |  9  7  1 | 
----------------------------------
|  6  2  1 |  9  4  7 |  5  8  3 | 
|  5  3  7 |  6  8  1 |  4  2  9 | 
|  9  8  4 |  3  5  2 |  6  1  7 | 
----------------------------------

# test 4: solving the board made by test 2
../sudoku/sudoku solve hard < ../tables/easyTable.txt
Original Board: 
----------------------------------
|  8  0  0 |  2  1  0 |  0  4  5 | 
|  0  1  0 |  0  0  0 |  7  6  0 | 
|  0  0  0 |  0  0  0 |  0  9  2 | 
----------------------------------
|  0  6  0 |  1  0  3 |  8  0  0 | 
|  1  0  8 |  5  0  4 |  0  3  0 | 
|  4  0  0 |  0  2  0 |  9  7  0 | 
----------------------------------
|  0  2  0 |  9  4  7 |  5  0  0 | 
|  5  3  0 |  6  0  0 |  4  2  0 | 
|  9  0  4 |  3  5  0 |  0  0  0 | 
----------------------------------
Solved: 
----------------------------------
|  8  7  6 |  2  1  9 |  3  4  5 | 
|  2  1  9 |  4  3  5 |  7  6  8 | 
|  3  4  5 |  7  6  8 |  1  9  2 | 
----------------------------------
|  7  6  2 |  1  9  3 |  8  5  4 | 
|  1  9  8 |  5  7  4 |  2  3  6 | 
|  4  5  3 |  8  2  6 |  9  7  1 | 
----------------------------------
|  6  2  1 |  9  4  7 |  5  8  3 | 
|  5  3  7 |  6  8  1 |  4  2  9 | 
|  9  8  4 |  3  5  2 |  6  1  7 | 
----------------------------------

# test 5: creating 16x16 on easy board 
../sudoku/sudoku create easy 16 > ../tables/easy16.txt

# test 6: creating 16x16 board on hard mode
../sudoku/sudoku create hard 16 > ../tables/hard16.txt

# test 7: solving the board made by test 5
../sudoku/sudoku solve easy 16 < ../tables/easy16.txt
Original Board: 
---------------------------------------------------------
| 11  8 16 14 |  1  0  5  2 |  0  3  0  7 | 10  0  0  0 | 
|  0  4  0  2 | 16 14  3  9 |  0 13 12 10 | 11  8  0  0 | 
|  3  9  0  0 |  0  0 10  7 |  5  0 16  0 |  0  1 14  2 | 
|  0 12  7 10 |  0  0 11  0 |  0  0  1 14 |  0  9  3  0 | 
---------------------------------------------------------
|  5  0  9 12 |  4  0  0  0 |  0  0  0  0 | 15  0 11  0 | 
|  4  0  1  8 |  5 13  0  0 | 14 15  0  3 |  2  0  0  0 | 
|  0  0 15  0 |  9  3  2  0 |  0 12  5  8 |  1  0 16  0 | 
|  0  0  2 11 | 15  0  0  8 |  1 10  0  0 | 12 13  7  5 | 
---------------------------------------------------------
| 10  0  0  1 |  0  9  0  0 |  2  0 14 16 |  6  0  8  3 | 
| 12  5  4  0 |  7  0 13  1 | 11  6  3  0 | 16 14  2  0 | 
|  2  0  8  3 |  0  0  0  6 |  0  4 10  1 | 13  5  0  0 | 
| 16 14 11  6 |  0  2 15  0 |  8  0  0  0 |  7  0  4  1 | 
---------------------------------------------------------
|  9  1  0  0 |  0  7  0  4 | 16 14 15  2 |  3  0  0 11 | 
|  7  0 14  5 |  6 15  0 16 |  0  1  4  0 |  8  2  0 12 | 
|  0  6  3  4 |  0  0  0 13 |  0 11  7  0 |  9  0  1  0 | 
| 15  2  0  0 | 11  0  0  3 |  6  0  8  5 | 14  7  0  0 | 
---------------------------------------------------------
Solved: 
---------------------------------------------------------
| 11  8 16 14 |  1  4  5  2 |  9  3  6  7 | 10 15 12 13 | 
|  1  4  5  2 | 16 14  3  9 | 15 13 12 10 | 11  8  6  7 | 
|  3  9  6 15 | 13 12 10  7 |  5  8 16 11 |  4  1 14  2 | 
| 13 12  7 10 |  8  6 11 15 |  4  2  1 14 |  5  9  3 16 | 
---------------------------------------------------------
|  5 13  9 12 |  4 10  1 14 |  7 16  2  6 | 15  3 11  8 | 
|  4 16  1  8 |  5 13  7 12 | 14 15 11  3 |  2 10  9  6 | 
|  6 10 15  7 |  9  3  2 11 | 13 12  5  8 |  1  4 16 14 | 
| 14  3  2 11 | 15 16  6  8 |  1 10  9  4 | 12 13  7  5 | 
---------------------------------------------------------
| 10 15 13  1 | 12  9  4  5 |  2  7 14 16 |  6 11  8  3 | 
| 12  5  4  9 |  7  8 13  1 | 11  6  3 15 | 16 14  2 10 | 
|  2  7  8  3 | 14 11 16  6 | 12  4 10  1 | 13  5 15  9 | 
| 16 14 11  6 |  3  2 15 10 |  8  5 13  9 |  7 12  4  1 | 
---------------------------------------------------------
|  9  1 12 13 | 10  7  8  4 | 16 14 15  2 |  3  6  5 11 | 
|  7 11 14  5 |  6 15  9 16 |  3  1  4 13 |  8  2 10 12 | 
|  8  6  3  4 |  2  5 14 13 | 10 11  7 12 |  9 16  1 15 | 
| 15  2 10 16 | 11  1 12  3 |  6  9  8  5 | 14  7 13  4 | 
---------------------------------------------------------

# test 8: solving the board made by test 6
../sudoku/sudoku solve hard 16 < ../tables/hard16.txt
Original Board: 
---------------------------------------------------------
|  1  5  2  6 |  0  7  8 16 |  0 10 15  0 |  0  9  0 13 | 
|  0  0  0  4 |  1  0  0  0 |  0  9 11 13 |  0 16 12  8 | 
|  0 16  0  0 | 15  9 11  0 |  0  0  2  0 |  0 14  0  0 | 
|  0 15  9  0 |  6  0  0  0 |  3 16  0  0 |  1 10  0  7 | 
---------------------------------------------------------
|  5  1  0  0 |  0  4  9  0 | 16  7 10  0 | 13  6  8  0 | 
|  0  4  0 12 | 16  0  0  0 | 13  0  0  2 |  0  3  0 10 | 
| 15  9  0  0 |  0  6  0  3 |  8  1  0  0 |  0  2  4 12 | 
| 14  6  0  0 |  5  8  0  0 |  9  0  0  0 | 16  1 15  0 | 
---------------------------------------------------------
|  0  2  1 15 |  0 13  0  0 |  5  8  7  0 | 10  4  9  0 | 
| 16  0  0  0 | 12 15  0  5 |  0 13  6  0 |  2  8  0  0 | 
|  9  0  7 13 |  0  0 16  0 |  0 15  1 12 |  0  0  0  5 | 
|  6  0  5  8 |  9  3  0  4 |  0  0 16 10 |  0 15  0  0 | 
---------------------------------------------------------
|  4 12 16  0 |  0  0  3  0 |  7 11  0  6 | 14  5 10  9 | 
|  0 13 11  0 |  0 14 10  1 |  0  3  0 16 |  0 12  6  4 | 
|  0  0  0  0 |  0  0  5  0 | 10  0  0  0 |  0 13 16  2 | 
| 10  0  0  0 | 13 16 12  0 |  2  0  4  0 | 11  0  0  0 | 
---------------------------------------------------------
Solved: 
---------------------------------------------------------
|  1  5  2  6 |  3  7  8 16 | 12 10 15 14 |  4  9 11 13 | 
|  3  7 14  4 |  1  5  2 10 |  6  9 11 13 | 15 16 12  8 | 
|  8 16 12 10 | 15  9 11 13 |  1  4  2  7 |  5 14  3  6 | 
| 13 15  9 11 |  6 12  4 14 |  3 16  8  5 |  1 10  2  7 | 
---------------------------------------------------------
|  5  1  3  2 | 11  4  9 12 | 16  7 10 15 | 13  6  8 14 | 
| 11  4  8 12 | 16  1 15  7 | 13  6 14  2 |  9  3  5 10 | 
| 15  9 13 16 | 10  6 14  3 |  8  1  5 11 |  7  2  4 12 | 
| 14  6 10  7 |  5  8 13  2 |  9 12  3  4 | 16  1 15 11 | 
---------------------------------------------------------
| 12  2  1 15 | 14 13  6 11 |  5  8  7  3 | 10  4  9 16 | 
| 16 10  4 14 | 12 15  1  5 | 11 13  6  9 |  2  8  7  3 | 
|  9  3  7 13 |  2 10 16  8 |  4 15  1 12 |  6 11 14  5 | 
|  6 11  5  8 |  9  3  7  4 | 14  2 16 10 | 12 15 13  1 | 
---------------------------------------------------------
|  4 12 16  1 |  8  2  3 15 |  7 11 13  6 | 14  5 10  9 | 
|  2 13 11  5 |  7 14 10  1 | 15  3  9 16 |  8 12  6  4 | 
|  7  8 15  9 |  4 11  5  6 | 10 14 12  1 |  3 13 16  2 | 
| 10 14  6  3 | 13 16 12  9 |  2  5  4  8 | 11  7  1 15 | 
---------------------------------------------------------


# INVALID INPUTS

# invalid mode
../sudoku/sudoku wrong easy
Please select a valid mode: create or solve.

# invalid difficulty
../sudoku/sudoku create wrong
Please select a valid level of difficulty: easy or hard.

# 3rd argument can only be dimension
../sudoku/sudoku create easy nonIntArg
Dimension must be a 4, 9, or 16.

# using invalid dimension
../sudoku/sudoku solve hard 10 
Dimension must be a 4, 9, or 16.

# using invalid board
../sudoku/sudoku solve easy < ../tables/invalidTable.txt
Error: format of input file is incorrect

# SOLVABILITY
# trying to solve a known unsolvable board
../sudoku/sudoku solve easy < ../tables/unsolvableTable.txt
5 already exists in row
5 already exists in col
5 already exists in box
Invalid board
Could not solve board
Original Board: 
5 1 6 8 4 5 7 3 2 
3 0 7 6 0 5 0 0 0 
8 0 9 7 0 0 0 6 5 
1 3 5 0 6 0 9 0 7 
4 7 2 5 9 1 0 0 6 
9 6 8 3 7 0 0 5 0 
2 5 3 1 8 6 0 7 4 
6 8 4 2 0 7 5 0 0 
7 9 1 0 5 0 6 0 8 

# VALGRIND TESTS
# checking for memory leaks on create mode
valgrind --leak-check=full --show-leak-kinds=all ../sudoku/sudoku create easy > ../tables/valgrindTable.txt
==29128== Memcheck, a memory error detector
==29128== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==29128== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==29128== Command: ../sudoku/sudoku create easy
==29128== 
==29128== 
==29128== HEAP SUMMARY:
==29128==     in use at exit: 0 bytes in 0 blocks
==29128==   total heap usage: 4,006 allocs, 4,006 frees, 93,098 bytes allocated
==29128== 
==29128== All heap blocks were freed -- no leaks are possible
==29128== 
==29128== For counts of detected and suppressed errors, rerun with: -v
==29128== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

# checking for memory leaks on solve mode
valgrind --leak-check=full --show-leak-kinds=all ../sudoku/sudoku solve easy < ../tables/valgrindTable.txt
==29169== Memcheck, a memory error detector
==29169== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==29169== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==29169== Command: ../sudoku/sudoku solve easy
==29169== 
Original Board: 
----------------------------------
|  6  0  4 |  0  2  5 |  8  3  0 | 
|  0  0  5 |  4  7  8 |  0  6  9 | 
|  0  8  0 |  0  6  9 |  0  0  0 | 
----------------------------------
|  0  6  9 |  0  0  0 |  7  4  0 | 
|  1  2  8 |  0  3  4 |  0  0  0 | 
|  5  4  0 |  8  0  0 |  0  0  0 | 
----------------------------------
|  0  0  0 |  6  8  0 |  9  0  0 | 
|  9  0  3 |  0  5  0 |  6  0  0 | 
|  0  5  0 |  0  0  7 |  3  0  0 | 
----------------------------------
Solved: 
----------------------------------
|  6  9  4 |  1  2  5 |  8  3  7 | 
|  2  3  5 |  4  7  8 |  1  6  9 | 
|  7  8  1 |  3  6  9 |  4  5  2 | 
----------------------------------
|  3  6  9 |  5  1  2 |  7  4  8 | 
|  1  2  8 |  7  3  4 |  5  9  6 | 
|  5  4  7 |  8  9  6 |  2  1  3 | 
----------------------------------
|  4  1  2 |  6  8  3 |  9  7  5 | 
|  9  7  3 |  2  5  1 |  6  8  4 | 
|  8  5  6 |  9  4  7 |  3  2  1 | 
----------------------------------
==29169== 
==29169== HEAP SUMMARY:
==29169==     in use at exit: 0 bytes in 0 blocks
==29169==   total heap usage: 47 allocs, 47 frees, 17,338 bytes allocated
==29169== 
==29169== All heap blocks were freed -- no leaks are possible
==29169== 
==29169== For counts of detected and suppressed errors, rerun with: -v
==29169== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

# checking for memory leaks on necessary edge cases
valgrind --leak-check=full --show-leak-kinds=all ../sudoku/sudoku solve easy < ../tables/invalidTable.txt
==29194== Memcheck, a memory error detector
==29194== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==29194== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==29194== Command: ../sudoku/sudoku solve easy
==29194== 
Error: format of input file is incorrect
==29194== 
==29194== HEAP SUMMARY:
==29194==     in use at exit: 0 bytes in 0 blocks
==29194==   total heap usage: 12 allocs, 12 frees, 8,604 bytes allocated
==29194== 
==29194== All heap blocks were freed -- no leaks are possible
==29194== 
==29194== For counts of detected and suppressed errors, rerun with: -v
==29194== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

exit 0
