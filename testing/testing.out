# ETHAN CHEN, BANSHAREE IREEN, JEFFREY JIANG
# testing.sh - integration testing for sudoku module

touch ../tables/easyTable.txt
touch ../tables/hardTable.txt
touch ../tables/valgrindTable.txt


# VALID TESTS
# test 1:creating a board on easy mode
./sudoku create easy > ../tables/easyTable.txt

# test 2: creating a board on hard mode
./sudoku create hard > ../tables/hardTable.txt

# test 3: solving the board made by test 1
./sudoku solve easy < ../tables/easyTable.txt
Original Board: 
-------------------------
| 2 0 0 | 0 7 0 | 0 0 0 | 
| 0 7 0 | 9 1 5 | 0 2 8 | 
| 0 0 5 | 0 8 2 | 0 0 3 | 
-------------------------
| 0 5 0 | 0 0 6 | 0 0 0 | 
| 6 4 1 | 0 9 3 | 8 5 7 | 
| 8 9 2 | 0 5 0 | 0 6 0 | 
-------------------------
| 5 0 0 | 7 3 0 | 0 0 6 | 
| 0 0 8 | 5 0 0 | 0 0 9 | 
| 0 3 7 | 0 0 0 | 0 0 2 | 
-------------------------
Solved: 
-------------------------
| 2 8 6 | 3 7 4 | 9 1 5 | 
| 3 7 4 | 9 1 5 | 6 2 8 | 
| 9 1 5 | 6 8 2 | 4 7 3 | 
-------------------------
| 7 5 3 | 8 4 6 | 2 9 1 | 
| 6 4 1 | 2 9 3 | 8 5 7 | 
| 8 9 2 | 1 5 7 | 3 6 4 | 
-------------------------
| 5 2 9 | 7 3 8 | 1 4 6 | 
| 4 6 8 | 5 2 1 | 7 3 9 | 
| 1 3 7 | 4 6 9 | 5 8 2 | 
-------------------------

# test 4: solving the board made by test 2
./sudoku solve hard < ../tables/easyTable.txt
Original Board: 
-------------------------
| 2 0 0 | 0 7 0 | 0 0 0 | 
| 0 7 0 | 9 1 5 | 0 2 8 | 
| 0 0 5 | 0 8 2 | 0 0 3 | 
-------------------------
| 0 5 0 | 0 0 6 | 0 0 0 | 
| 6 4 1 | 0 9 3 | 8 5 7 | 
| 8 9 2 | 0 5 0 | 0 6 0 | 
-------------------------
| 5 0 0 | 7 3 0 | 0 0 6 | 
| 0 0 8 | 5 0 0 | 0 0 9 | 
| 0 3 7 | 0 0 0 | 0 0 2 | 
-------------------------
Solved: 
-------------------------
| 2 8 6 | 3 7 4 | 9 1 5 | 
| 3 7 4 | 9 1 5 | 6 2 8 | 
| 9 1 5 | 6 8 2 | 4 7 3 | 
-------------------------
| 7 5 3 | 8 4 6 | 2 9 1 | 
| 6 4 1 | 2 9 3 | 8 5 7 | 
| 8 9 2 | 1 5 7 | 3 6 4 | 
-------------------------
| 5 2 9 | 7 3 8 | 1 4 6 | 
| 4 6 8 | 5 2 1 | 7 3 9 | 
| 1 3 7 | 4 6 9 | 5 8 2 | 
-------------------------


# INVALID INPUTS

# invalid mode
./sudoku wrong easy
Please select a valid mode: create or solve.

# invalid difficulty
./sudoku create wrong
Please select a valid level of difficulty: easy or hard.

# 3rd argument can only be dimension
./sudoku create easy nonIntArg
Dimension can be either 4, 9 or 16.

# using invalid dimension
./sudoku solve hard 10
Dimension can be either 4, 9 or 16.


# SOLVABILITY
# trying to solve a known unsolvable board
./sudoku solve easy < ../tables/unsolvableTable.txt
Error: format of input file is incorrect

# VALGRIND TESTS
# checking for memory leaks on create mode
valgrind --leak-check=full --show-leak-kinds=all ./sudoku create easy > ../tables/valgrindTable.txt
==25625== Memcheck, a memory error detector
==25625== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==25625== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==25625== Command: ./sudoku create easy
==25625== 
==25625== 
==25625== HEAP SUMMARY:
==25625==     in use at exit: 0 bytes in 0 blocks
==25625==   total heap usage: 1,477,988 allocs, 1,477,988 frees, 39,229,636 bytes allocated
==25625== 
==25625== All heap blocks were freed -- no leaks are possible
==25625== 
==25625== For counts of detected and suppressed errors, rerun with: -v
==25625== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

# checking for memory leaks on solve mode
valgrind --leak-check=full --show-leak-kinds=all ./sudoku solve easy < ../tables/valgrindTable.txt
==25642== Memcheck, a memory error detector
==25642== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==25642== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==25642== Command: ./sudoku solve easy
==25642== 
Original Board: 
-------------------------
| 3 0 1 | 0 0 5 | 2 0 7 | 
| 0 2 0 | 9 0 0 | 0 4 1 | 
| 0 0 8 | 0 0 1 | 3 0 6 | 
-------------------------
| 0 7 4 | 0 0 3 | 0 2 0 | 
| 0 0 3 | 4 0 0 | 0 0 9 | 
| 8 6 0 | 0 0 0 | 7 3 0 | 
-------------------------
| 7 0 6 | 0 0 4 | 9 5 2 | 
| 0 0 0 | 5 9 0 | 4 0 0 | 
| 5 4 0 | 7 0 0 | 6 0 0 | 
-------------------------
Solved: 
-------------------------
| 3 9 1 | 6 4 5 | 2 8 7 | 
| 6 2 7 | 9 3 8 | 5 4 1 | 
| 4 5 8 | 2 7 1 | 3 9 6 | 
-------------------------
| 9 7 4 | 8 6 3 | 1 2 5 | 
| 2 1 3 | 4 5 7 | 8 6 9 | 
| 8 6 5 | 1 2 9 | 7 3 4 | 
-------------------------
| 7 8 6 | 3 1 4 | 9 5 2 | 
| 1 3 2 | 5 9 6 | 4 7 8 | 
| 5 4 9 | 7 8 2 | 6 1 3 | 
-------------------------
==25642== 
==25642== HEAP SUMMARY:
==25642==     in use at exit: 0 bytes in 0 blocks
==25642==   total heap usage: 47 allocs, 47 frees, 17,338 bytes allocated
==25642== 
==25642== All heap blocks were freed -- no leaks are possible
==25642== 
==25642== For counts of detected and suppressed errors, rerun with: -v
==25642== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



